#!/usr/bin/env ruby

require_relative 'bootstrap'

root = File.expand_path('..', File.expand_path(File.dirname(__FILE__)))
dir = File.join(root, 'generations')
FileUtils.mkdir_p(dir)

creator = Arium::Creators::Village.with_config(
  rows: 50,
  columns: 200,
  villages: 10,
  lakes: 3
)

world = Arium::World.with_config(
  creator: creator,
  evolvers: [Arium::Evolvers::Water.new, Arium::Evolvers::Nomad.new],
  generation_locator: proc { |number| File.join(dir, number.to_s) }
)

previous_gen =
  Dir.glob(File.join(dir, '*'))
    .map { |f| File.basename(f) }
    .reject { |f| f.include? '.png' }
    .map { |f| f.to_i }
    .max
next_gen = if previous_gen
             previous_gen + 1
           else
             0
           end

world.generation(next_gen)

Arium::Renderers::PNGCurves.new.render_file(File.join(dir, next_gen.to_s))

FileUtils.move('outfile.png', File.join(dir, "#{next_gen}.png"))
`bin/set_desktop #{File.join(dir, "#{next_gen}.png")}`
FileUtils.rm(File.join(dir, "#{previous_gen}.png")) if previous_gen
